import{an as u,d as y,ad as t,r as i,p as d,w as f,o as b,q as I,e as o,v as g,b as v,ag as x,a as s,f as w,__tla as D}from"./index-34f06ebd.js";import{j as h,__tla as k}from"./bpmn-embedded-d0b6b8de.js";import{E as B,__tla as P}from"./index-460c50ff.js";let p,V=Promise.all([(()=>{try{return D}catch{}})(),(()=>{try{return k}catch{}})(),(()=>{try{return P}catch{}})()]).then(async()=>{let e;e=w("span",{class:"el-icon-picture-outline"},"\u6D41\u7A0B\u56FE",-1),p=y({name:"BpmProcessInstanceBpmnViewer",__name:"ProcessInstanceBpmnViewer",props:{loading:t.bool,id:t.string,processInstance:t.any,tasks:t.array,bpmnXml:t.string},setup(a){const r=a,n=i({prefix:"flowable"}),c=i([]);return d(async()=>{r.id&&(c.value=await(async l=>await u.get({url:"/bpm/activity/list",params:l}))({processInstanceId:r.id}))}),(l,X)=>{const _=B,m=g;return f((b(),I(_,{class:"box-card"},{header:o(()=>[e]),default:o(()=>[v(s(h),x({key:"designer",activityData:s(c),prefix:s(n).prefix,processInstanceData:a.processInstance,taskData:a.tasks,value:a.bpmnXml},s(n)),null,16,["activityData","prefix","processInstanceData","taskData","value"])]),_:1})),[[m,a.loading]])}}})});export{p as _,V as __tla};
